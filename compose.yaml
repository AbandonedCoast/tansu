---
services:
  db:
    image: ${POSTGRES_IMAGE:-postgres:17}
    environment:
      PGUSER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - 5432:5432
    volumes:
      - db:/var/lib/postgresql/data
      - ./etc/initdb.d/:/docker-entrypoint-initdb.d/
    healthcheck:
      test: /usr/bin/pg_isready
      interval: 5s
      timeout: 10s
      retries: 5
    pull_policy: missing
  minio:
    image: quay.io/minio/minio
    command: server
      /data
      --console-address ":9001"
    volumes:
      - minio:/data
    ports:
      - 9000:9000
      - 9001:9001
  tansu:
    image: ${TANSU_IMAGE:-ghcr.io/tansu-io/tansu:latest}
    restart: unless-stopped
    environment:
      RUST_BACKTRACE: ${RUST_BACKTRACE}
      RUST_LOG: ${RUST_LOG}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_ENDPOINT: ${AWS_ENDPOINT}
      AWS_ALLOW_HTTP: ${AWS_ALLOW_HTTP}
    volumes:
      - db:/var/lib/postgresql/data
      - ./etc/schema/:/schema/
    command: --kafka-cluster-id ${CLUSTER_ID}
      --kafka-listener-url tcp://0.0.0.0:9092/
      --kafka-advertised-listener-url tcp://${ADVERTISED_LISTENER}
      --storage-engine ${STORAGE_ENGINE}
      --schema-registry file:///schema
    ports:
      - 9092:9092
    links:
      - db
      - minio
    pull_policy: always
  jaeger:
    image: jaegertracing/all-in-one
    ports:
      - 16686:16686
      - 4317:4317
      - 4318:4318
      - 5778:5778
      - 9411:9411
volumes:
  db:
    driver: local
  minio:
    driver: local
